these are notes on testing different parameters of the Skeletron python script developed by Mike Migurski at Stamen.
  *using this script requires first installing dependencies, often building from source in the terminal. this part can be a pain in the ass.

standard input to run the script in the terminal looks like this:
   
   for the route-rels script (will return only motorway, trunk, primary, secondary roads);
      python skeletron-osm-route-rels.py /Users/chrishenrick/Projects/Beijing/DATA/skeletron_test/osm.xml/beijing.osm /Users/chrishenrick/Projects/Beijing/DATA/skeletron_test/json/beijing-routes_z15_w20.json 
      
   
   for the streets script (will return all categories):
      python skeletron-osm-streets.py ~/Projects/Beijing/DATA/skeletron_test/osm.xml/beijing.osm /Users/chrishenrick/Projects/Beijing/DATA/skeletron_test/json/beijing-streets_z15.json 
      
   in other words:
     python <script-name> <path to your osm.xml data> <path to your output .json data>
     
   *you must specify .osm data as the input and .json data as the output (this script was designed for tweaking data for webmapping, hence the .json file format)

   *note: don't set the ignore highway class / type parameter to yes as it ditches the road classification tag / field.
      the road lines can be joined later in AI using name and highway fields.
      
   *to set the width and zoom parameters using -z and -w after the script name and before the .osm file name
     ie: python <script-name> -z <some number> -w <some number> <path to your osm.xml data> <path to your output .json data>
         python skeletron-osm-route-rels.py -z 14 -w 13 /Volumes/Avalon/Cartography/MapData/VECTOR/DataMined/NorthAmerica/U.S./TN/nashville/osm_xml.xml/planet_-87.123\,35.893_-86.397\,36.457.osm /Users/chrishenrick/Projects/Nashville/data/osm-xml-processed/nashville_z14_w13.json
   
For the exact map scales associated with zoom levels (-z) see: http://kelsocartography.com/blog/?p=2407
   -z 19 is the most zoomed in (~1:1,000) while -z 14 is ~1:36,000 and -z 4 is ~1:37,000,000

The width parameter appears to contribute to generalization, eg: a width of 15 will be more generalized than the default value of 10.
  

*******************************************
tests

a zoom level of 1 caused an error in the script,  but this was for metro area extract data, probably to be expected: 

Traceback (most recent call last):
  File "skeletron-osm-streets.py", line 79, in <module>
    geojson = multilines_geojson(multilines, key_properties, **kwargs)
  File "/Users/chrishenrick/carto_tools/temp/Skeletron/Skeletron/output.py", line 19, in multilines_geojson
    centerline = multiline_centerline(multiline, buffer, density, min_length, min_area)
  File "/Users/chrishenrick/carto_tools/temp/Skeletron/Skeletron/__init__.py", line 125, in multiline_centerline
    routes = skeleton_routes(skeleton, min_length)
  File "/Users/chrishenrick/carto_tools/temp/Skeletron/Skeletron/__init__.py", line 333, in skeleton_routes
    routes = graph_routes(skeleton, True)
  File "/Users/chrishenrick/carto_tools/temp/Skeletron/Skeletron/__init__.py", line 211, in graph_routes
    for (v, w) in combinations(leaves, 2)]
  File "/Library/Python/2.7/site-packages/Shapely-1.2.16-py2.7.egg/shapely/geometry/base.py", line 226, in distance
    return self.impl['distance'](self, other)
  File "/Library/Python/2.7/site-packages/Shapely-1.2.16-py2.7.egg/shapely/topology.py", line 27, in __call__
    self._validate(other, stop_prepared=True)
  File "/Library/Python/2.7/site-packages/Shapely-1.2.16-py2.7.egg/shapely/topology.py", line 18, in _validate
    raise ValueError("Prepared geometries cannot be operated on")
ValueError: Prepared geometries cannot be operated on

   
-depending on the data and geographic area one script may work better than the other, but returns all types of streets. 
   the geojson data can be queried in QGIS to only display types of roads desired for simplification 
   (ie: motorways, primary, etc.)
   
-For Avalon maps setting the zoom level to around 15 or 13 seems to generate good results (z15 is ~1:18,000 and z13 is ~1:72,000)

-increasing the width parameter > than the default value of 10 for smaler scale zoom levels seems like a good idea?